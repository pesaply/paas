{"name":"Paas","tagline":"","body":"Create a minilab Pages site for your project\r\n (function() {\r\n     var endpoint, endpointRequest, SPClient, UPClient;\r\n\r\n     // config params for UnifiedPush server\r\n     var variantId = \"b3cc3a16-f2c4-40fa-a4f5-570b87eb8ff5\";\r\n     var variantSecret = \"e3adc846-d29a-43be-b3c0-1be986a95716\";\r\n     var unifiedPushUrl = \"https://minilab-stackrooter.rhcloud.com/\";\r\n     var simplePushUrl = \"\";\r\n\r\n      // create the 'UnifiedPush' client object:\r\n     UPClient = AeroGear.UnifiedPushClient(variantId, variantSecret, unifiedPushUrl);\r\n\r\n     // onConnect callback function called when SimplePush\r\n     // successfully establishes connection to the server\r\n     function spConnect() {\r\n\r\n         // use 'PushManager' to request a new PushServer URL endpoint for 'Mail' notifications:\r\n         endpointRequest = navigator.push.register();\r\n          // the DOMRequest returns 'successfully':\r\n         endpointRequest.onsuccess = function( event ) {\r\n             // extract the endpoint object from the event:\r\n             endpoint = event.target.result;\r\n\r\n             // if it is the first registration, need to register\r\n             // the 'pushEndpoint' with the UnifiedPush server.\r\n             if ( endpoint.pushEndpoint ) {\r\n                 // assemble the metadata for registration with the UnifiedPush server\r\n                 var metadata = {\r\n                     deviceToken: mailEndpoint.channelID,\r\n                     simplePushEndpoint: mailEndpoint.pushEndpoint\r\n                 };\r\n\r\n                 var settings = {\r\n                     success: function() {\r\n                        //success handler\r\n                     },\r\n                     error: function() {\r\n                        //error handler\r\n                     }\r\n                 };\r\n\r\n                 settings.metadata = metadata;\r\n\r\n                 // register with the server\r\n                 UPClient.registerWithPushServer(settings);\r\n             } else {\r\n                 console.log(\"'Endpoint' was already registered!\");\r\n             }\r\n         };\r\n         // set the notification handler:\r\n         navigator.setMessageHandler( \"push\", function( message ) {\r\n             if ( message.channelID === mailEndpoint.channelID ) {\r\n                 // let's react on the endpoint\r\n             }\r\n         });\r\n     }\r\n\r\n     // onClose callback function:\r\n     function spClose() {\r\n         $(\"#reconnect\").show();\r\n         appendTextArea(\"\\nConnection Lost!\\n\");\r\n     }\r\n\r\n     SPClient = AeroGear.SimplePushClient({\r\n         simplePushServerURL: simplePushUrl,\r\n         onConnect: spConnect,\r\n         onClose: spClose\r\n    });\r\n })();","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}